/***********  Участок памяти (200-...) ***********/
000114 // L
000101 // A
000123 // S
000124 // T
000116 // N
000101 // A
000115 // M
000105 // E


/***********  Основная программа (1000) ***********/
012701 // MOV 200, R1           ; Помещаем адрес начала массива символов в R1
000200                          ; 1 операнд

/// Вычисляем размер фамилии
005004 // CLR R4                ; Стираем R4 (в нём будет размер фамилии).
010105 // MOV R1, R5            ; Копируем адрес начала массива (из R1) в R5. 
005725 // TST (R5)+             ; Проверяем число по адресу в регистре R5 и прибавляем к R5 единицу.
001402 // BEQ 1020              ; Если не нашли символа - начинаем вывод на экран (прыгаем к TSTB).
005204 // INC R4                ; Иначе прибавляем к R4 (размеру фамилии) единицу.
001374 // BNE 1010              ; Если был символ не пустой - продолжаем проходиться. 

/// То что непосредственно требуется (вывод на экран)
105737 // TSTB 177564           ; Проверка адреса регистра состояния экрана (регистр внешнего устройства - экрана).
177564                          ; Адрес регистра состояния экрана. 
100376 // BPL 1022              ; Если результат положительный, то дропаемся на 1000 
                                ; (то есть если произошло такое, что внешнее устройство пока не готово принимать данные).         
012137 // MOV (R1)+, @#177566   ; Пересылаем в адрес регистра данных монитора символ по адресу в R1.
177566                          ; Адрес регистра данных монитора (2 операнд предыдущей команды).
077405 // SOB R4, 1022          ; Дропаемся на 1022 пока R4 не обнулится.
000000 // HALT                  ; Конец.