/***********  Подпрограмма ЗАПИСЬПЕРЕХОД (1050) ***********/
010104 // MOV R1, R4         ; Копируем данные из R1 в R4.
010105 // MOV R1, R5         ; Копируем данные из R1 в R5.
005000 // CLR R0             ; Стираем регистр R0.

005705 // TST R5             ; Проверяем число в регистре R5, оно же R1.
001405 // BEQ 1074           ; Если равно нулю - прыгаем на (MOV R0, @R1).
006205 // ASR R5             ; Арифметически сдвигаем число в регистре R5 вправо.
103001 // BCC 1070           ; Если в младшем разряде итогового числа после переноса 0 - пропускаем следующую инструкцию.
060400 // ADD R4, R0         ; Прибавляем к регистру R0 число из регистра R4.
006304 // ASL R4             ; Сдвигаем число в регистре R4 влево.
000771 // BR 1056            ; Прыгаем на (TST R5).

010011 // MOV R0, @R1        ; Копируем значение регистра R0 в ячейку, адрес которой находится в регистре R1.
060201 // ADD R2, R1         ; Прибавляем к значению регистра R1 регистр R2.
062701 // ADD #2, R1         ; Прибавляем двойку к значению регистра R1.
000002                       ; 
000206 // RTS R6 	         ; Выход из подпрограммы.



/***********  Основная программа (1000) ***********/
012701 // MOV #11, R1        ; Помещаем в R1 "Число" - адрес начала каких-то последовательностей в памяти.
000011
012702 // MOV #2, R2         ; Помещаем в R2 "Месяц" - количество элементов последовательности.
000002
012703 // MOV #3744, R3      ; Помещаем в R3 "Год" - ПРОСТО ТАК, ОЧЕНЬ ИНТЕРЕСНО ПОЧЕМУ.
003744
004637 // JSR R6, @#1050     ; Переход к подпрограмме "ЗАПИСЬПЕРЕХОД".
001050
072203 // SOB R2, 1014       ; Цикл, в котором опять вызываем подпрограмму и который совершается R2 итераций.
000000 // HALT               ; Конец.