/// Обнуляем результат (R2):
005002 // CLR R2         ; помещаем 0 в R2

/// Сохраняем значение в будущем сдвигаемых регистров в иные регистры:
010003 // MOV R0, R3     ; помещаем значение регистра R0 в R3
010104 // MOV R1, R4     ; помещаем значение регистра R1 в R4

/// Обработка первого операнда (R0):
005700 // TST R0         ; проверяем R0
100401 // BMI 1          ; если регистр отрицательный - переводим из ДК
100001 // BPL 1          ; если регистр положительный - пропускаем перевод
005400 // NEG R0         ; переводим из ДК в ПК

/// Обработка второго операнда (R1):
005701 // TST R1         ; проверяем R1
100401 // BMI 1          ; если операнд отрицательный - переводим из ДК
100001 // BPL 1          ; если операнд положительный - пропускаем перевод
005401 // NEG R1         ; переводим из ДК в ПК

/// Непосредственно алгоритм:
006200 // ASR R0         ; делим один из операндов (на 2)
103401 // BCS 1          ; если нечётное - накапливаем результат
103001 // BCC 1          ; если чётное - пропускаем накапливание
060102 // ADD R1 R2      ; накапливаем результат
006301 // ASL R1         ; удваиваем один из операндов
005700 // TST R0         ; уменьшаемый операнд равен нулю?
001371 // BNE -13        ; если не равен - продолжаем делить (сдвигать влево)

/// Восстанавливаем исходное значение сдвигаемых регистров с помощью иных регистров.
010300 // MOV R3, R0     ; помещаем значение регистра R3 в R0
010401 // MOV R4, R1     ; помещаем значение регистра R4 в R1

000000 // HALT           ; конец.